'use strict'

// let num=0;
// const users=['Alex', 'Nikola', 'Helen'];
// while(num<users.length){
//     if(users[num]==='Nikola'){
//         console.log('Nikola finded');
//         console.log(num);
//         break;
//     }
//    if(num===(users.length-1)){
//        console.log('user unfinded');
//        console.log(num);
//        }
//    num+=1;
// }





// -----------------------dont work----------------------
// let num=0;
// const users = ['Alex', 'Nikola', 'Helen', 'Sveta'];
// do {
//     if(users[num] === 'Helen') {
//         continue
//     }
//     console.log('Hello:',users[num]);
//     num +=1;

// } while(num>users.length);
// -----------------------dont work----------------------

// let i = 0;
// const users = ['Jim','Bem','Dambo','Alert','Alex', 'Nikol', 'Helen', 'And someone else'];

// do{
//     console.log('Datz is number of iteration: '+i);
//     if (users[i]==='Alex'){
//         console.log('We have found Alex!!!');
//         i++;
//         continue
//     }
//     console.log('Iteration after if');
//     console.log(users[i]);
//     i++;
// }while(i <users.length);



/*

---------TASK09--------
  ***ЗАДАНИЕ ПОВЫШЕННОЙ СЛОЖНОСТИ***
  
  Создайте игру угадай число.
  
  Есть массив чисел numbers, содержащий "верные" числа.
  Числа в массиве всегда идут по возрастанию, 1-5, 20-40, 2-100 и т.п.
  
  Просим пользователя ввести цифру от самого маленького,
  до самого большого элемента массива. Эти значения необходимо
  сохранить в переменные min и max. Учтите что массив произвольный,
  но элементы всегда идут по возрастанию.
  
  Пусть prompt говорит "Введите цифру между x и y", где x и y 
  соотвественно самый маленький и самый большой элемент массива.
  
  Но пользователь может ввести что угодно, необходимо проверить 
  что было введено. Преобразовать input в числовой тип и проверить 
  число ли это.
  
    - Если не число - выводим alert с сообщением о том, что было 
      введено не число.
    - Если число - проверить содержит ли в себе массив numbers это число.
    - Если содержит - выводим alert с сообщением 'Поздравляем, Вы угадали!'.
    - Есл не содержит - выводим alert с сообщением 'Сожалеем, Вы не угадали!'.
*/

// const numbers = [12, 15, 25, 37, 41];
// const min = numbers[0];
// const max = numbers[4];

// const answer = Number (prompt(`Enter number ${min} to ${max}`));
// if (Number.isNaN(answer)) {
//     alert ('it is non number')
// }
// else {
//     if (numbers.includes(answer)) {
//         alert ('congratulation - you are win');
//     }
//     else {
//         alert (`your loose ${answer}`);
//     }
// }
// -------------------------------------------------------------------

//----------------------------Home 02 hard task--------------------
/*
  ⚠️ ЗАДАНИЕ ПОВЫШЕННОЙ СЛОЖНОСТИ - ВЫПОЛНЯТЬ ПО ЖЕЛАНИЮ
  
  Напишите скрипт имитирующий авторизацию пользователя.
  
  Есть массив паролей зарегистрированных пользователей passwords. 
  
  При посещении страницы, необходимо попросить пользователя ввести свой пароль,
  после чего проверить содержит ли массив passwords пароль введенный пользователем.
  
  Пароль можно ввести не верно всего n раз, кол-во хранится в переменной attempts.
  Подсказка: используйте цикл do...while.
  Если был введен пароль который есть в массиве passwords, вывести alert 
  с текстом 'Добро пожаловать!' и прекратить спрашивать пароль в цикле.
  Если был введен не существующий пароль, отнять от лимита попыток единицу, 
  вывести alert с текстом "Неверный пароль, у вас осталось n попыток", 
  где n это оставшийся лимит. 
  
  После того как пользователь закрыл alert, запросить пароль снова. 
  Продолжать запрашивать пароль до тех пор, пока пользователь не введет 
  существующий пароль, не кончатся попытки или пока пользователь 
  не нажмет Cancel в prompt.
  Если закончились попытки, вывести alert с текстом "У вас закончились попытки, аккаунт заблокирован!"
  
  Если пользователь нажмет Cancel, прекратить выполнение цикла.
*/

const passwords = ['qwerty', '111qwe', '123123', 'r4nd0mp4zzw0rd'];
let attempts = 3;
let inputPassword;
do {
  inputPassword = prompt('Enter password: ');
  if (passwords.includes(inputPassword)) {
    alert('Добро пожаловать!');
    break;
  }
  else if (inputPassword !== null) {
    attempts -= 1;
    if(attempts > 0){
      alert(`Неверный пароль, у вас осталось ${attempts} попыток`);
    }
    else {
      alert('У вас закончились попытки, аккаунт заблокирован!');
    }
  }
} while (attempts > 0 && inputPassword !== null);
